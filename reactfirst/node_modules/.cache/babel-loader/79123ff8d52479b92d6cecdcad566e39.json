{"ast":null,"code":"var _jsxFileName = \"/Users/luludesai/Desktop/CSCI401/Intuitive-Data-Display/reactfirst/src/Components/MultipleSelectMajor.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['CSCI', 'BME', 'CSBA', 'ME', 'CECS', 'CE', 'EE'];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelectGender() {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; //create a clear all function for the dropdown\n\n\n  const clearAll = () => {\n    setPersonName([]);\n  }; //create a select all function for the dropdown\n\n\n  const selectAll = () => {\n    setPersonName(names);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-chip-label\",\n            children: \"Major\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-multiple-chip-label\",\n            id: \"demo-multiple-chip\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"select-multiple-chip\",\n              label: \"Major\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this),\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this),\n            MenuProps: MenuProps,\n            children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              style: getStyles(name, personName, theme),\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"selectButton\",\n              onClick: selectAll,\n              children: \"Select All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"selectButton\",\n              onClick: clearAll,\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectGender, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});\n\n_c = MultipleSelectGender;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectGender\");","map":{"version":3,"names":["React","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Grid","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelectGender","setPersonName","useState","handleChange","event","target","value","split","clearAll","selectAll","m","selected","display","flexWrap","gap","map"],"sources":["/Users/luludesai/Desktop/CSCI401/Intuitive-Data-Display/reactfirst/src/Components/MultipleSelectMajor.js"],"sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'CSCI',\n  'BME',\n  'CSBA',\n  'ME',\n  'CECS',\n  'CE',\n  'EE',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectGender() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n    //create a clear all function for the dropdown\n    const clearAll = () => {\n      setPersonName([]);\n    }\n  \n    //create a select all function for the dropdown\n    const selectAll = () => {\n      setPersonName(names);\n    }\n\n  return (\n    <div>\n      <Grid container\n        spacing={0}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Grid item > \n            <FormControl sx={{ m: 1, width: 300 }}>\n            <InputLabel id=\"demo-multiple-chip-label\">Major</InputLabel>\n            <Select\n              labelId=\"demo-multiple-chip-label\"\n              id=\"demo-multiple-chip\"\n              multiple\n              value={personName}\n              onChange={handleChange}\n              input={<OutlinedInput id=\"select-multiple-chip\" label=\"Major\" />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} />\n                  ))}\n                </Box>\n              )}\n              MenuProps={MenuProps}\n            >\n              {names.map((name) => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                  style={getStyles(name, personName, theme)}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item xs={8}><button className=\"selectButton\" onClick={selectAll}>Select All</button> </Grid>\n            <Grid item xs={8}><button className=\"selectButton\" onClick={clearAll}>Clear All</button> </Grid>\n          </Grid>\n        </Grid>\n        \n\n\n      </Grid>\n      {/* <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Major</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Major\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}