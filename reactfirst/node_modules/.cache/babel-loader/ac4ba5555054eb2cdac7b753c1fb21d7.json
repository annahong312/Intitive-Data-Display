{"ast":null,"code":"var _jsxFileName = \"/Users/luludesai/Desktop/CSCI401/Intuitive-Data-Display/reactfirst/src/Components/SelectSource/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Spin } from 'antd';\nimport styled from 'styled-components';\nimport { gapi } from 'gapi-script';\nimport GoogleDriveImage from '../Images/google-drive.png';\nimport ListDocuments from '../ListDocuments';\nimport { style } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewDocumentWrapper = styled.div`\n  ${style}\n`; // Client ID and API key from the Developer Console\n\n_c = NewDocumentWrapper;\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_GOOGLE_DRIVE_API_KEY; // Filename that we are looking for\n\nconst FILENAME = \"\"; // add filename\n// Array of API discovery doc URLs for APIs\n\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nconst SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly'; // EDIT\n\nconst SelectSource = () => {\n  _s();\n\n  const [listDocumentsVisible, setListDocumentsVisibility] = useState(false);\n  const [documents, setDocuments] = useState([]);\n  const [isLoadingGoogleDriveApi, setIsLoadingGoogleDriveApi] = useState(false);\n  const [isFetchingGoogleDriveFiles, setIsFetchingGoogleDriveFiles] = useState(false);\n  const [signedInUser, setSignedInUser] = useState();\n\n  const handleChange = file => {};\n  /**\n   * Print files.\n   */\n\n\n  const searchForFile = function () {\n    let searchTerm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    setIsFetchingGoogleDriveFiles(true);\n    gapi.client.drive.files.find({\n      fields: 'files(name)',\n      q: FILENAME\n    }).then(function (response) {\n      setIsFetchingGoogleDriveFiles(false);\n      setListDocumentsVisibility(true);\n      const res = JSON.parse(response.body);\n      setDocuments(res.files);\n    });\n  }; //EDIT THIS FUNC.\n\n  /**\n   *  Sign in the user upon button click.\n   */\n\n\n  const handleAuthClick = event => {\n    gapi.auth2.getAuthInstance().signIn();\n  };\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n\n\n  const updateSigninStatus = isSignedIn => {\n    if (isSignedIn) {\n      // Set the signed in user\n      setSignedInUser(gapi.auth2.getAuthInstance().currentUser.je.Qt);\n      setIsLoadingGoogleDriveApi(false); // list files if user is authenticated\n\n      listFiles(); //SHOULD CHANGE THIS TO FIND OUR SPECIFFIC FILE\n    } else {\n      // prompt user to sign in\n      handleAuthClick();\n    }\n  };\n  /**\n   *  Sign out the user upon button click.\n   */\n\n\n  const handleSignOutClick = event => {\n    setListDocumentsVisibility(false);\n    gapi.auth2.getAuthInstance().signOut();\n  };\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n\n  const initClient = () => {\n    setIsLoadingGoogleDriveApi(true);\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function (error) {});\n  };\n\n  const handleClientLoad = () => {\n    gapi.load('client:auth2', initClient);\n  };\n\n  const showDocuments = () => {\n    setListDocumentsVisibility(true);\n  };\n\n  const onClose = () => {\n    setListDocumentsVisibility(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewDocumentWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      className: \"custom-row\",\n      children: [/*#__PURE__*/_jsxDEV(ListDocuments, {\n        visible: listDocumentsVisible,\n        onClose: onClose,\n        documents: documents,\n        onSearch: listFiles,\n        signedInUser: signedInUser,\n        onSignOut: handleSignOutClick,\n        isLoading: isFetchingGoogleDriveFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          spinning: isLoadingGoogleDriveApi,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleClientLoad(),\n            className: \"source-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon icon-success\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  height: \"80\",\n                  width: \"80\",\n                  src: GoogleDriveImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: \"Google Drive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                children: \"Import documents straight from your google drive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectSource, \"qL22aZ0LxJJx4ltL1KbrugNAZhs=\");\n\n_c2 = SelectSource;\nexport default SelectSource;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewDocumentWrapper\");\n$RefreshReg$(_c2, \"SelectSource\");","map":{"version":3,"names":["React","useState","Row","Col","Spin","styled","gapi","GoogleDriveImage","ListDocuments","style","NewDocumentWrapper","div","CLIENT_ID","process","env","REACT_APP_GOOGLE_DRIVE_CLIENT_ID","API_KEY","REACT_APP_GOOGLE_DRIVE_API_KEY","FILENAME","DISCOVERY_DOCS","SCOPES","SelectSource","listDocumentsVisible","setListDocumentsVisibility","documents","setDocuments","isLoadingGoogleDriveApi","setIsLoadingGoogleDriveApi","isFetchingGoogleDriveFiles","setIsFetchingGoogleDriveFiles","signedInUser","setSignedInUser","handleChange","file","searchForFile","searchTerm","client","drive","files","find","fields","q","then","response","res","JSON","parse","body","handleAuthClick","event","auth2","getAuthInstance","signIn","updateSigninStatus","isSignedIn","currentUser","je","Qt","listFiles","handleSignOutClick","signOut","initClient","init","apiKey","clientId","discoveryDocs","scope","listen","get","error","handleClientLoad","load","showDocuments","onClose","width"],"sources":["/Users/luludesai/Desktop/CSCI401/Intuitive-Data-Display/reactfirst/src/Components/SelectSource/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Spin } from 'antd';\nimport styled from 'styled-components';\nimport { gapi } from 'gapi-script';\nimport GoogleDriveImage from '../Images/google-drive.png';\nimport ListDocuments from '../ListDocuments';\nimport { style } from './styles';\n\nconst NewDocumentWrapper = styled.div`\n  ${style}\n`;\n\n// Client ID and API key from the Developer Console\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_GOOGLE_DRIVE_API_KEY;\n\n// Filename that we are looking for\nconst FILENAME = \"\"; // add filename\n\n// Array of API discovery doc URLs for APIs\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nconst SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly'; // EDIT\n\nconst SelectSource = () => {\n  const [listDocumentsVisible, setListDocumentsVisibility] = useState(false);\n  const [documents, setDocuments] = useState([]);\n  const [isLoadingGoogleDriveApi, setIsLoadingGoogleDriveApi] = useState(false);\n  const [isFetchingGoogleDriveFiles, setIsFetchingGoogleDriveFiles] = useState(false);\n  const [signedInUser, setSignedInUser] = useState();\n  const handleChange = (file) => {};\n\n  /**\n   * Print files.\n   */\n  const searchForFile = (searchTerm = null) => {\n    setIsFetchingGoogleDriveFiles(true);\n    gapi.client.drive.files\n      .find({\n        fields: 'files(name)',\n        q: FILENAME,\n      })\n      .then(function (response) {\n        setIsFetchingGoogleDriveFiles(false);\n        setListDocumentsVisibility(true);\n        const res = JSON.parse(response.body);\n        setDocuments(res.files);\n      });\n  }; //EDIT THIS FUNC.\n\n  /**\n   *  Sign in the user upon button click.\n   */\n  const handleAuthClick = (event) => {\n    gapi.auth2.getAuthInstance().signIn();\n  };\n\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n  const updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      // Set the signed in user\n      setSignedInUser(gapi.auth2.getAuthInstance().currentUser.je.Qt);\n      setIsLoadingGoogleDriveApi(false);\n      // list files if user is authenticated\n      listFiles();\n      //SHOULD CHANGE THIS TO FIND OUR SPECIFFIC FILE\n    } else {\n      // prompt user to sign in\n      handleAuthClick();\n    }\n  };\n\n  /**\n   *  Sign out the user upon button click.\n   */\n  const handleSignOutClick = (event) => {\n    setListDocumentsVisibility(false);\n    gapi.auth2.getAuthInstance().signOut();\n  };\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  const initClient = () => {\n    setIsLoadingGoogleDriveApi(true);\n    gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n      .then(\n        function () {\n          // Listen for sign-in state changes.\n          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        },\n        function (error) {}\n      );\n  };\n\n  const handleClientLoad = () => {\n    gapi.load('client:auth2', initClient);\n  };\n\n  const showDocuments = () => {\n    setListDocumentsVisibility(true);\n  };\n\n  const onClose = () => {\n    setListDocumentsVisibility(false);\n  };\n\n  return (\n    <NewDocumentWrapper>\n      <Row gutter={16} className=\"custom-row\">\n        <ListDocuments\n          visible={listDocumentsVisible}\n          onClose={onClose}\n          documents={documents}\n          onSearch={listFiles}\n          signedInUser={signedInUser}\n          onSignOut={handleSignOutClick}\n          isLoading={isFetchingGoogleDriveFiles}\n        />\n        <Col span={8}>\n          <Spin spinning={isLoadingGoogleDriveApi} style={{ width: '100%' }}>\n            <div onClick={() => handleClientLoad()} className=\"source-container\">\n              <div className=\"icon-container\">\n                <div className=\"icon icon-success\">\n                  <img height=\"80\" width=\"80\" src={GoogleDriveImage} />\n                </div>\n              </div>\n              <div className=\"content-container\">\n                <p className=\"title\">Google Drive</p>\n                <span className=\"content\">Import documents straight from your google drive</span>\n              </div>\n            </div>\n          </Spin>\n        </Col>\n      </Row>\n    </NewDocumentWrapper>\n  );\n};\n\nexport default SelectSource;"],"mappings":"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"},"metadata":{},"sourceType":"module"}